// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class CTCADASTROEMAILTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() throws MalformedURLException {
    driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), DesiredCapabilities.chrome());
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void cTCADASTROEMAIL() {
    driver.get("https://www.rdstation.com/marketing/email-marketing/?network=g&utm_source=search&utm_medium=cpc&utm_campaign=BR-INB-RDSM-SEARCH-FEATURES_RELACIONAR-PHRASE&utm_content=email-mkt-como-fazer-526592012535&utm_term=fazer%20um%20email-p&device=c-&gclid=Cj0KCQjwub-HBhCyARIsAPctr7xqFVw_SfTMinBcLYd6qOWnBnxXIhOxq3AZwG-fx-cuTFifhIJlDA0aAr7gEALw_wcB");
    driver.manage().window().setSize(new Dimension(683, 728));
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".form-signup-lm:nth-child(4) > .input-sm"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".btn:nth-child(5)"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.cssSelector(".form-signup-lm:nth-child(4) > .input-sm")).click();
    driver.findElement(By.cssSelector(".form-signup-lm:nth-child(4) > .input-sm")).sendKeys("dbcteste@dbc.com.br");
    driver.findElement(By.cssSelector(".btn:nth-child(5)")).click();
    js.executeScript("window.scrollTo(0,532)");
    js.executeScript("window.scrollTo(0,799)");
    js.executeScript("window.scrollTo(0,241)");
    assertThat(driver.findElement(By.cssSelector(".iMzGfs")).getText(), is("Já tenho uma conta. Entrar"));
    {
      List<WebElement> elements = driver.findElements(By.linkText("Entrar"));
      assert(elements.size() > 0);
    }
    assertThat(driver.findElement(By.cssSelector(".NvIVq")).getText(), is("Comece seus 10 dias de teste grátis do RD Station Marketing!"));
    assertThat(driver.findElement(By.cssSelector(".hVVGyG")).getText(), is("Não precisa cadastrar cartão de crédito."));
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".hVVGyG"));
      assert(elements.size() > 0);
    }
    assertThat(driver.findElement(By.cssSelector(".sc-fzqBZW:nth-child(1) > .Text__Root-asn4rv-0")).getText(), is("Diga, qual seu nome?"));
    {
      List<WebElement> elements = driver.findElements(By.id("name"));
      assert(elements.size() > 0);
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".sc-fzqBZW:nth-child(2) > .Text__Root-asn4rv-0"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector("form"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    assertThat(driver.findElement(By.cssSelector(".sc-fzqBZW:nth-child(2) > .Text__Root-asn4rv-0")).getText(), is("Seu email de trabalho"));
    {
      List<WebElement> elements = driver.findElements(By.id("email"));
      assert(elements.size() > 0);
    }
    assertThat(driver.findElement(By.cssSelector(".Text__Root-asn4rv-0:nth-child(3)")).getText(), is("Qual o site da sua empresa?"));
    {
      List<WebElement> elements = driver.findElements(By.id("site"));
      assert(elements.size() > 0);
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".sc-fzqBZW:nth-child(4) > .Text__Root-asn4rv-0"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".sc-fzqBZW:nth-child(4) > .Text__Root-asn4rv-0"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".sc-fzqBZW:nth-child(4) > .Text__Root-asn4rv-0"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".sc-fzqBZW:nth-child(4) > .Text__Root-asn4rv-0"));
      assert(elements.size() > 0);
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".sc-fznxKY"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".sc-fznxKY"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".sc-fznxKY"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector(".sc-fznxKY")).click();
    driver.findElement(By.id("email")).sendKeys("dbcteste@dbc.com");
    {
      WebElement element = driver.findElement(By.cssSelector(".hAnomB"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.cssSelector(".hAnomB")).click();
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    js.executeScript("window.scrollTo(0,438)");
    {
      WebElement element = driver.findElement(By.cssSelector("html"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector("html"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector("html"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.cssSelector("html")).click();
    driver.findElement(By.cssSelector(".hAnomB")).click();
    js.executeScript("window.scrollTo(0,438)");
    assertThat(driver.findElement(By.cssSelector(".sc-fzqBZW:nth-child(1) > .GfOWC")).getText(), is("Este campo não pode ficar em branco"));
    {
      WebElement element = driver.findElement(By.id("email"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    {
      WebElement element = driver.findElement(By.id("email"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.id("email"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    driver.findElement(By.id("email")).click();
    driver.findElement(By.id("email")).click();
    driver.findElement(By.cssSelector("form")).click();
    js.executeScript("window.scrollTo(0,838)");
    driver.findElement(By.cssSelector(".hAnomB")).click();
    assertThat(driver.findElement(By.cssSelector(".sc-fzqBZW:nth-child(2) > .GfOWC")).getText(), is("Este campo não pode ficar em branco"));
    assertThat(driver.findElement(By.cssSelector(".sc-fzqBZW:nth-child(4) > .Text__Root-asn4rv-0")).getText(), is("Isso é fundamental para uma experiência completa do RD Station. Você poderá alterá-lo quando desejar."));
    assertThat(driver.findElement(By.cssSelector(".sc-fzqBZW:nth-child(5) > .GfOWC")).getText(), is("Este campo não pode ficar em branco"));
    driver.findElement(By.id("name")).click();
    driver.findElement(By.id("name")).sendKeys("Filipe Muanis");
    driver.findElement(By.id("email")).sendKeys("filipemuanis@outlook.com");
    driver.findElement(By.id("site")).click();
    driver.findElement(By.id("site")).sendKeys("dbdteste.com.br");
    driver.findElement(By.id("site")).click();
    driver.findElement(By.id("site")).sendKeys("dbcteste.com.br");
    driver.findElement(By.id("password")).click();
    driver.findElement(By.id("password")).sendKeys("1234567.");
    driver.findElement(By.cssSelector(".sc-fznZeY")).click();
    driver.findElement(By.cssSelector(".sc-fznZeY")).click();
    driver.findElement(By.cssSelector(".hAnomB")).click();
  }
}
